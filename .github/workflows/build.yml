name: Build and Analyze

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  tests:
    name: Run Tests and Coverage
    runs-on: ubuntu-latest

    steps:
      # Checkout code
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones disabled for better analysis relevancy

      # Build the project using SonarQube's build wrapper
      - name: Build Wrapper for Tests
        run: |
          build-wrapper-linux-x86-64 --out-dir bw-output cmake -H. -Bbuild -DCMAKE_BUILD_TYPE=Debug
          build-wrapper-linux-x86-64 --out-dir bw-output cmake --build build

      # Run tests and generate coverage report
      - name: Run Tests and Generate Coverage
        run: |
          cd build
          ctest --output-on-failure
          gcovr -r . --xml-pretty --output coverage.cobertura.xml

  build:
    name: Build and Analyze with SonarQube
    needs: tests
    runs-on: ubuntu-latest

    steps:
      # Checkout code
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones disabled for better analysis relevancy

      # Perform SonarQube analysis
      - name: SonarQube Analysis
        uses: sonarsource/sonarqube-scan-action@v3
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      # Check SonarQube Quality Gate (optional, can fail the job if uncommented)
      - name: SonarQube Quality Gate
        uses: sonarsource/sonarqube-quality-gate-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
